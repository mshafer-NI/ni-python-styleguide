name: Publish Package

on:
  release:
    types: [released]

env:
  # Versions are also listed in PR.yml
  POETRY_VERSION: 1.8.1
  PYTHON_VERSION: 3.11  # Use latest

jobs:
  publish_package:
    name: Publish Package
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.event.release.target_commitish }} # This is the branch the release was created from. Normally main, but can be a dev branch
          persist-credentials: false # otherwise, the token used is the GITHUB_TOKEN, instead of your personal token
          fetch-depth: 0 # otherwise, you will failed to push refs to dest repo

      - name: Set up Python
        uses: ni/python-actions/setup-python@97860b52be87c788fb6df812bd8d1ca68c7aa885 # v0.3.0
      - name: Set up Poetry
        uses: ni/python-actions/setup-poetry@97860b52be87c788fb6df812bd8d1ca68c7aa885 # v0.3.0
      - name: Check project version
        if: github.event_name == 'release'
        uses: ni/python-actions/check-project-version@97860b52be87c788fb6df812bd8d1ca68c7aa885 # v0.3.0
      - name: Build distribution packages
        run: poetry build
      - name: Upload build artifacts
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: ${{ env.dist-artifact-name }}
          path: dist/*
      # @TODO: This is a workaround for there not being a way to check the lock file
      #   See: https://github.com/python-poetry/poetry/issues/453
      - name: Check for lock changes
        run: |
          poetry lock --check
      - uses: actions/cache@v4
        with:
          path: ~/.cache/pypoetry/virtualenvs
          key: ${{ runner.os }}-poetry-${{ hashFiles('poetry.lock') }}
      - name: Install the Package
        run: poetry install
      - name: Lint the Code
        run: poetry run ni-python-styleguide lint

      - name: Run tests
        run: poetry run pytest -v

      # If the version is 0.1.0-alpha.0, this will set the version to 0.1.0
      - name: Promote package version to release
        uses: ni/python-actions/update-project-version@97860b52be87c788fb6df812bd8d1ca68c7aa885 # v0.3.0
        with:
          create-pull-request: false
          commit-message: "Bump package version to minor release version"
          version-rule: "minor"
      - name: Build Python package
        if: ${{ github.event.release.target_commitish == 'main' || startsWith(github.event.release.target_commitish, 'releases/')}}
        run: |
          poetry build

      - name: Upload Python package
        if: ${{ github.event.release.target_commitish == 'main' || startsWith(github.event.release.target_commitish, 'releases/')}}
        uses: pypa/gh-action-pypi-publish@76f52bc884231f62b9a034ebfe128415bbaabdfc # v1.12.4
        with:
          packages-dir: dist/
        
      - name: Bump poetry version to next alpha version
        uses: ni/python-actions/update-project-version@97860b52be87c788fb6df812bd8d1ca68c7aa885 # v0.3.0
        with:
          create-pull-request: true
          commit-message: "Bump package version"
          version-rule: "prepatch"
